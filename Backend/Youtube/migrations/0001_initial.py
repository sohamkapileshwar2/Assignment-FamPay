# Generated by Django 4.0.5 on 2022-06-20 20:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PageInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('totalResults', models.IntegerField()),
                ('resultsPerPage', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Snippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publishedAt', models.CharField(max_length=40)),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('thumbnails', models.JSONField()),
                ('publishTime', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='VideoList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(max_length=40)),
                ('nextPageToken', models.CharField(max_length=20)),
                ('pageInfo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Youtube.pageinfo')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(max_length=40)),
                ('snippet', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Youtube.snippet')),
                ('videoList', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Youtube.videolist')),
            ],
        ),
    ]
